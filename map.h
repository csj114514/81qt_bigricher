#ifndef MAP_H
#define MAP_H
#include"player.h"

//地图信息和基本数值设置文件
class map
{
public:
    //地图信息*******************************************
    int blocks_type[32]={
        4,1,7,1,1,3,1,2,5,1,1,1,8,1,3,1,6,1,1,7,1,1,2,1,3,8,1,1,1,2,1,1
    };//记录格子上数字类型,1是city,2 is factory, 3 is bank,4 is startplace,5 is prison,6 is airport,7 is reward,8 is event
    int blocks_num[32]{
        0,0,0,1,2,0,3,0,0,4,5,6,0,7,1,8,0,9,10,1,11,12,1,13,2,1,14,15,16,2,17,18
    };//记录格子对应的在map类中的下标
    map(){
        for(int i=0;i<4;i++){
            man[i].num=i;man[i].position=0;
            man[i].coins=2000;//wfc,wait for change
            man[i].coins_inbank=0;
            man[i].if_extra_round=false;man[i].if_skip_round=false;man[i].if_airport=false;
            //for (int j= 0; j< 32; j++) {
            //    man[i].if_owned_city[j]=false;
            //    man[i].owned_factory[j]=0;
            // }
            man[i].if_play=true;
            player_in_play=4;
        }
        for(int i=0;i<32;i++){
            level_of_city[i]=-1;
            city_owner[i]=-1;
        }
    };

    player man[4];
    int player_in_play;

    //city******************
    int city_bulid_cost[32][4]={
        {0,0,0,0},{100,20,40,60},{0,0,0,0},{80,30,50,70},{80,15,30,45},{0,0,0,0},{80,30,60,90},{0,0,0,0},{0,0,0,0},{150,10,20,30},
        {80,20,40,60},{80,15,30,45},{0,0,0,0},{90,12,24,36},{0,0,0,0},{120,5,10,15},{0,0,0,0},{85,20,40,60},{95,25,50,75},{0,0,0,0},
        {110,20,40,60},{85,15,30,45},{0,0,0,0},{100,20,40,60},{0,0,0,0},{0,0,0,0},{80,25,50,75},{100,20,40,60},{85,15,30,45},{0,0,0,0},
        {85,15,30,45},{90,5,10,15}
    };//wfc
    int city_pass_tax[32][4]={
        {0,0,0,0},{50,60,75,100},{0,0,0,0},{40,55,75,100},{40,45,60,80},{0,0,0,0},{40,60,85,120},{0,0,0,0},{0,0,0,0},{75,80,95,110},
        {40,50,65,80},{40,45,60,80},{0,0,0,0},{45,53,70,95},{0,0,0,0},{60,65,72,85},{0,0,0,0},{42,50,64,85},{47,60,80,105},{0,0,0,0},
        {55,65,80,100},{42,50,65,85},{0,0,0,0},{50,60,75,100},{0,0,0,0},{0,0,0,0},{40,48,60,80},{50,60,75,100},{42,50,65,85},{0,0,0,0},
        {42,50,65,85},{45,48,53,60}
    };//wfc
    int sell_city_price[32][4]={
        {0,0,0,0},{70,80,90,100},{0,0,0,0},{40,50,60,70},{40,45,50,55},{0,0,0,0},{40,55,70,85},{0,0,0,0},{0,0,0,0},{100,105,110,115},
        {40,48,56,64},{40,45,50,55},{0,0,0,0},{45,51,57,63},{0,0,0,0},{60,62,64,66},{0,0,0,0},{43,48,55,60},{48,54,60,66},{0,0,0,0},
        {75,85,95,110},{43,50,57,64},{0,0,0,0},{50,55,60,65},{0,0,0,0},{0,0,0,0},{40,48,56,64},{70,80,90,100},{43,50,57,64},{0,0,0,0},
        {43,50,57,64},{45,47,49,51}
    };//wfc
    int level_of_city[32];//-1说明没有被拥有，取值始终为-1，0，1，2，3
    int city_owner[32];//-1:nobody
    //***********************

    //factory****************
    int factory_place[3]={7,22,29};
    int factory_buy_cost=150;//wfc
    int factory_pass_tax=80;//wfc
    int factory_owner[3][3]={{-1,-1,-1},{-1,-1,-1},{-1,-1,-1}};//没有记-1
    //***********************

    //others*****************
    double bank_rate=0.02;
    //***********************

    //************************************************

    //下面是一些会用到的零散的函数*************************

    //游戏进程中基本函数********
    void move(int pr_num,int step_length){//实现起点的加钱功能
        man[pr_num].position+=step_length;
        if(man[pr_num].position>=32){
            man[pr_num].coins+=200;//wfc
            man[pr_num].position=man[pr_num].position%32;
        }
    }
    void player_die(int pr_num){//结算
        man[pr_num].if_play=false;
        for(int i=0;i<32;i++){//回收city
            if(blocks_type[i]==1 and city_owner[i]==pr_num){
                level_of_city[i]=-1;
                city_owner[i]=-1;
            }
        }
        for(int i=0;i<3;i++){//回收factory
            if(factory_owner[i][0]==pr_num or factory_owner[i][1]==pr_num or factory_owner[i][2]==pr_num){
                for(int j=0;j<3;j++){
                    if(factory_owner[i][j]==pr_num){
                        for(int k=j;k<3;k++){
                            if(k+1==3)factory_owner[i][k]=-1;
                            else factory_owner[i][k]=factory_owner[i][k+1];
                        }
                    }
                }
            }
        }
    }
    //*************************

    //*********************************************************
};

#endif // MAP_H
